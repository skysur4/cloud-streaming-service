plugins {
	id 'org.springframework.boot'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group = 'com.cloud.main'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    maven {
        url 'http://70.121.224.52:8081/repository/maven-central/'
        allowInsecureProtocol true
    }
    maven {
        url 'http://70.121.224.52:8081/70.121.224.52:8081/content/groups/public/'
        allowInsecureProtocol true
    }
    jcenter {
        url 'http://70.121.224.52:8081/repository/jcenter/'
        allowInsecureProtocol true
    }
    maven {
        url "http://70.121.224.52:8081/repository/releases/"
        allowInsecureProtocol true
    }
    maven {
        url 'http://70.121.224.52:8081/repository/snapshots/'
        allowInsecureProtocol true
    }
	//mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")

	IS_LOCAL = !project.hasProperty('profile') || !profile || 'local'.equalsIgnoreCase(profile)

	if (!IS_LOCAL
	&& !'dev'.equalsIgnoreCase(profile)
	&& !'stage'.equalsIgnoreCase(profile)
	&& !'prod'.equalsIgnoreCase(profile)
	) {
		throw new GradleException("Profile [${profile}] is invalid...")
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	if(IS_LOCAL){
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
	}

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	//session login
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.session:spring-session-data-redis'

	//monotoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

	//lombok
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

	/******************** others ********************/
	//property encryption
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	//swagger
	//implementation 'org.springdoc:springdoc-openapi-ui:1.6.+'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'

	//guava
	implementation 'com.google.guava:guava:31.1-jre'

	//apache
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-collections4:4.4'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-starter-validation"

}

jar {
	enabled = false
}

test {
	ignoreFailures = true
	useJUnitPlatform()
}